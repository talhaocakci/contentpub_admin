type Price @model @auth(rules: [{allow: public}]) {
  id: ID!
  stripePriceId: String
  purchaseType: PurchaseType
  recurrenceType: RecurrenceType
  currency: String
  amount: Float
  bundleID: ID! @index(name: "byBundle")
}

type Section @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String
  description: String
  courseID: ID! @index(name: "byCourse")
  Lessons: [Lesson] @hasMany(indexName: "bySection", fields: ["id"])
}

type Tenant @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String
}

type Content @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String
  description: String
  s3Url: AWSURL
  type: ContentType
  objectId: String
  owner: String
  bundles: Bundle @belongsTo
}

type Bundle @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String
  description: String
  isFree: Boolean
  contents: [Content] @hasMany
  prices: [Price] @hasMany(indexName: "byBundle", fields: ["id"])
  isAllAccess: Boolean
  stripeProductId: String
}

enum RecurrenceType {
  WEEKLY
  MONTHLY
  ANNUAL
}

enum PurchaseType {
  ONE_TIME
  SUBSCRIPTION
}

type Customer @model @auth(rules: [{allow: public}]) {
  id: ID!
  userName: String
  stripeId: String
  createDate: AWSDate
  purchases: [Purchase] @hasMany(indexName: "byCustomer", fields: ["id"])
  email: String
}

enum Source {
  SELF
  CENTRAL_CAMPAIGN
}

enum ContentType {
  COURSE
  DOCUMENT
  ARTICLE
  VIDEO
  PHOTO
  ONLINE_SESSION
}

type Purchase @model @auth(rules: [{allow: public}]) {
  id: ID!
  purchaseTime: AWSDate
  validTill: AWSDate
  source: Source
  stripePaymentIntentId: String
  stripePriceId: String
  purchaseType: PurchaseType
  customerID: ID! @index(name: "byCustomer")
  bundle: Bundle @hasOne
  stripeProductId: String
  tenant: Tenant @hasOne
}

type Lesson @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String
  description: String
  video: String
  sectionID: ID! @index(name: "bySection")
}

type Course @model @auth(rules: [{allow: public}]) {
  id: ID!
  title: String
  description: String
  thumbnail: String
  stripeProduct: String
  Sections: [Section] @hasMany(indexName: "byCourse", fields: ["id"])
}
 